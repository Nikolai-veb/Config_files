Commands

vim mama.txt papa.txt      - открыть файл mama.txt, после выхода из него открыть файл papa.txt
vim -о mama.txt papa.txt   - открыть сразу все файлы.

:w filename   - сохраняет файл с новым именем

Перемещение по файлуo

<Ctrl-f> — на страницу (экран) вниз
<Ctrl-b> — на страницу (экран) верх
<Ctrl-d> — на пол страницы (экрана) вниз
<Ctrl-u> — на пол страницы (экрана) верх
<Ctrl-y> — на строку вверх, без изменения положения курсора
<Ctrl-e> — на строку вниз, без изменения положения курсора
0 («ноль») — в начало текущей строки;
^ — в начало текущей строки (к первому непробельному символу);
$ — в конец текущей строки
w — на слово вправо
b — на слово влево
W — до пробела вправо
B — до пробела влево
} — абзац вниз
{ — абзац вверх
gg — перейти в начало файла
G — перейти в конец файла
<number>G — перейти на конкретную строку <number>
/<text><CR> — перейти к <text>
?<text><CR> — то же самое, но искать назад
n — повторить поиск
N — повторить поиск назад
[[ — в начало функции
'' — к месту выполнения команды [[]]]]}

Перемещение по экрану
z- сдвинуть страницу так чтобы строка с курсором оказалась внизу.
z[Enter] сдвинуть страницу так чтобы строка с курсором оказалась вверху
z. или zz страницу так чтобы строка с курсором оказалась посредине

Перемещение в пределах экрана

H перемещение на верхнюю строку экрана (5H на пять строк ниже верхней строки)
M перемещение на среднюю строку экрана
L перемещение на последнюю строку экрана (5L на пять строк выше нижней строки)

Удаление

x — удалить символ под курсором (<число>x удаляет указанное число символов начиная с того который находится под курсором)
X — удалить символ влево (удалить символ перед курсором)
d — используется совместно с командами перемещения. Удаляет символы с текущего положения курсора до положения после ввода команды перемещения. Пример:
dw - удаляет символы с текущего до конца слова. включая пробел после слова, чтобы удалить символы до конца слова, но оставить пробел используется команда de,
dE - удаляет символы с текущего до конца слова, включая символы пунктуации, но оставляет пробел после слова,
diw - удаляет слово под курсором,
dd — удалить текущую строку (вырезать)
d<число>d или <число>dd — стирание числа строк начиная с текущей,
db - удаляет символы с текущего до начала слова (удаление в обратном направлении)
d0 - удаление символов с начала строки до текущего положения курсора
d$ или D - удаление символов с текущего положения курсора до конца строки.
с — команда аналогичная d, но после удаление переходит в режим ввода. (замена текста) Очень удобная альтернатива команде R
сс - команда удаляет текущую строку и переходит в режим ввода.
C - удаляет текст с текущего положения курсора до конца строки, аналогична команде с$ (где $ - символ конца строки)
yy (также Y) — копирование текущей строки в неименованный буфер
y<число>y — копирование числа строк начиная с текущей в неименованный буфер
p — вставка содержимого неименнованного буфера под курсором. Поскольку в vim девять ячеек буфера удаления. Можно вставить не только последнее удаление но и удаления сделанные ранее. Например "4p вставит под курсор содержимое четвертого удаления начиная с последнего. Также чтобы поменять местами два символа можно использовать комбинацию команд "удалить" -x (удаление в буфер) и "вставить" - p (вставить из буфера). Таким образом, поставив курсор на первую букву из двух которые необходимо поменять местами и нажав комбинацию клавиш xp мы совершим необходимые действия.
P — вставка содержимого неименованного буфера перед курсором
J — слияние текущей строки со следующей. Числовой аргумент перед командой показывает сколько следующих линий необходимо объединить с текущей. Например 2J объединить две следующие строки с текущей, на которой расположен курсор."

Запись/выход

ZQ - выйти без сохранения
ZZ - записать файл и выйти(Если файл не изменяли, то записываться он не будет)
:x - записать файл и выйти

